{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyMP6rGdzqHfBT/gv4KXq7ZM",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/2021711396Honguiseong/-/blob/main/Assignment_11_2021711396_%ED%99%8D%EC%9D%98%EC%84%B1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VIdPyO_Q_4T3"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import os\n",
        "import datetime\n",
        "\n",
        "import IPython\n",
        "import IPython.display\n",
        "import matplotlib as mpl\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import tensorflow as tf\n",
        "\n",
        "test_d= pd.read_csv('/123.csv')\n",
        "test_l = pd.read_csv('/testl1.csv')\n",
        "train_d = pd.read_csv('/traindata.csv')\n",
        "train_l = pd.read_csv('/trainl.csv')"
      ],
      "execution_count": 56,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HysmlcuH__A0"
      },
      "source": [
        "train_dataset = tf.data.Dataset.from_tensor_slices((train_d,train_l))\n",
        "test_dataset = tf.data.Dataset.from_tensor_slices((test_d,test_l))"
      ],
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9sNcZeKuITZx",
        "outputId": "49d4cb14-d6d3-4652-b831-66ac3ec77fb8"
      },
      "source": [
        "print(train_dataset, test_dataset)"
      ],
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<BatchDataset shapes: ((None, 1), (None, 1)), types: (tf.string, tf.int64)> <BatchDataset shapes: ((None, 1), (None, 1)), types: (tf.string, tf.int64)>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "emduFbm7GIsH",
        "outputId": "c40a7135-4f55-406e-f94f-cf2ee39e3827"
      },
      "source": [
        "test_l"
      ],
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    0\n",
              "0   1\n",
              "1   1\n",
              "2   0\n",
              "3   0\n",
              "4   0\n",
              "5   1\n",
              "6   0\n",
              "7   1\n",
              "8   0\n",
              "9   0\n",
              "10  0\n",
              "11  0\n",
              "12  1\n",
              "13  0\n",
              "14  0\n",
              "15  1\n",
              "16  1\n",
              "17  0\n",
              "18  0\n",
              "19  0\n",
              "20  1\n",
              "21  1\n",
              "22  1\n",
              "23  1\n",
              "24  0\n",
              "25  0\n",
              "26  0\n",
              "27  0\n",
              "28  0\n",
              "29  0\n",
              "30  0\n",
              "31  0\n",
              "32  1\n",
              "33  0\n",
              "34  0\n",
              "35  0\n",
              "36  1\n",
              "37  1\n",
              "38  0"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c-FssUWNA0Ha",
        "outputId": "94b29da9-c5ad-4c87-fe48-c93ef23942ea"
      },
      "source": [
        "for example, label in train_dataset.take(1): ##built-in method\n",
        "    print('text: ', example.numpy())\n",
        "    print('label: ', label.numpy())"
      ],
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "text:  [b'70,70.2,70.1,70.3,70,70.4,70.7,70.5,69.7,70,70.6,71.4,70,69.5,69.5,70.3,70.5,71.2,71.8,71.7,72.3,71.3,72.4,72.6,72.3,71.6,71,72,87.6,82.4,80.8,77.6,74.4,72.8,73.8,72.9,72.5,71.2,71.6,69.7,69.8,68.8,69.4,68.1,68.6,68.5,68.3,68.2,68.7,68.1,68.2,70.4,71,70.6,71.5,70.2,71.5,70.6,68.5,70.6,70.4,70.8,71.7,72.9,76.5,79.3,79.9,76.7,75.7,74.2,73.7,74.6,74.9,75,74.3,73.9,74.6,74.1,73.6,74,74,74.8,74.8,71.7,71,72.5,71.8,72.3,77.2,78.9,75,70.4,66.1,63.2,61.6,59.5,58.5,58.4,55.6,55.9,59.4,60.4,60.9,62.9,64.4,66.8,66.3,66,65.9,67.4,67.7,68.3,67.4,67.7,67.3,65.3,66.9,67.7,69.2,68.7,69.7,68.7,69.5,69.4,71.1,69.2,69,69,68.9,70.2,71.3,71.1,69.3,66.5,68.8,66.7,67.1,67.4,67.8,68.1,68.2,68.1,68.2,68.6,67.7,67.3,67.1,66.4,66.3,66.2,67.9,68.2,67.4,65.5,66.7,65.2,66.9,68.9,68.4,66.6,69.8,70,72.9,73.6,75.5,72.8,71.4,71.2,68.7,66.7,66.5,65,63.4,64.5,64,61.5,62.5,62.4,60.7,61.5,61.7,56.8,53.5,54,54.6,51.8,54.6,59.4,62.4,66.1,69,69.9,72.2,72.5,73.4,74.4,76,76.2,77.2,76.9,79.8,77.7,77.6,78.9,80,77.5,76.5,76.6,76.2,74.2,72.8,73.6,74.3,72.5,71.3,71.5,71.5,70.4,77.2,67.3,67.1,67.2,67.3,66.9,66.4,66,66.3,64.3,63.8,68.2,66.6,65.1,65.3,65,64.1,62.7,64.7,67.4,66.9,66.3,65.8,65.3,65.6,65.8,65,65.6,65.7,65.4,64.9,65.1,63.2,65.9,64.4,65.4,65.6,65.4,63.6,64.3,64.1,150.8,169.5,93.7,64.1,67,67.6,67.6,66.3,66.3,67.7,63.8,65.9,66.4,66.7,68.7,69.4,70.4,69.3,69.3,66.1,65.7,65.3,65.1,65.8,66.3,65.3,65.2,65.4,68.1,67.1,67,67.3,67.7,69.1,69.4,69.2,71.7,70.5,73.9,72.7,73.3,69.3,66.6,68.4,71.3,69.2,102.4,68.4,77.1,83.4,84.5,85.8,87.3,94.3,89.7,77.1,80.2,90,87.9,87.5,88.1,88.3,87,86.8,87.7,80.7,76.8,116.4,75.5,69.3,79.1,80.1,85.7,89.5,177.8,95.2,109.2,80.2,73.9,75.2,76.8,76.7,77.3,77.9,82.6,77.5,107.9,126.4,123,125.1,111.1,123.9,153,81.9,83.7,86.1,87.3,88.1,89.3,90.6,75,90.6,90.3,90.1,88.8,88.6,88.3,87.2,86.9,88,86.9,85.9,84.3,83.5,82.5,80.9,79.8,78.7,76.1,75.3,75.3,76.7,76.5,76.1,75.9,76.7,75.3,75.7,74.6,73.7,72.2,71.6,72.5,71,72.9,73.6,72.6,72.3,70.1,69.4,69.6,68.3,70.4,72.3,73.9,72,72.5,72.6,72.2,70.7,70.9,71.1,71.3,72.1,71.8,73.2,73.3,71.3,71.9,70.6,72.4,71.9,72.1,73.8,73.5,74.8,75.3,75,75.8,75.7,75.1,73.4,73.9,74.7,71.3,76,82.8,82.3,87,87.5,86.3,88.4,88.7,88.1,88.2,87.9,85.2,81.7,79.8,82.8,83.5,81.9,82.8,80,80.5,81.3,83.1,84.9,85.9,86.3,84.7,84.2,85.4,85.8,85.4,85.6,85.3,83.8,78.1,78.1,78.7,78.8,83.3,84.7,86.7,85.9,85.8,89.2,91.6,92,91.3,93.5,94.2,93.2,91.1,90.9,92.7,92.7,92.6,90.5,88.2,88.7,93.1,94,95.9,97.3,97.6,84.2,82.4,83.1,84,86.7,88.7,88.9,89.5,91.3,90.2,82,80.9,83.4,84.4,87.1,90.9,93.6,88.8,92.2,86.2,87.2,89.5,91.2,94.6,95.3,95.4,95.1,95.6,95.9,96.5,92,88.3,94.8,98.2,103.9,100.7,95.2,98.3,102.7,104.2,104.7,105.8,103.8,105.1,101.8,97.1,100.6,96.8,90.7,89.2,91,89.7,93.2,83.3,76.1,74.2,78.3,75.5,70.7,70.4,70.2,70,72.5,71.2,74.6,74,75.2,74.1,75.5,76.7,77.5,77.7,77.8,78.9,79.1,78.3,80.1,80.1,76.7,77.7,76.2,75.4,74.9,75,75.6,76.3,76.6,75.8,75.8,76.5,77.1,76.4,76.5,73.5,74.1,72.2,71.1,70.6,70,53.5,72,71.5,72.1,74']\n",
            "label:  [1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "E__z0UrdA745"
      },
      "source": [
        "BUFFER_SIZE = 100\n",
        "BATCH_SIZE = 64\n",
        "\n",
        "\n",
        "##shuffle, make batches\n",
        "train_dataset = train_dataset.shuffle(BUFFER_SIZE).batch(BATCH_SIZE)\n",
        "test_dataset = test_dataset.batch(BATCH_SIZE)"
      ],
      "execution_count": 60,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uvaZkKl1A0KZ",
        "outputId": "6109e6bc-a9e6-4995-ce9b-b8ec3db164e3"
      },
      "source": [
        "for example, label in train_dataset.take(1):\n",
        "    print('texts: ', example.numpy()[:1])\n",
        "    print()\n",
        "    print('labels: ', label.numpy()[:1])"
      ],
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "texts:  [[b'61.7,61.3,59.8,61.6,63.8,60.4,63.6,62.1,62.9,63.2,63.5,59.6,56.2,56.8,58.1,60.5,57.3,58.4,56.9,60.4,59.6,61.5,60.6,62.2,63.1,63.4,65.3,63.4,65.1,66,65,64.8,65,64.6,64.8,65.1,64.3,65.2,66.3,63.4,64.7,64.7,64.7,65.4,65,73.8,74.7,74.8,69.1,68.3,66.9,64.9,64.9,64.1,65.7,66.3,63.5,66.1,64,65.4,64.9,65.2,67.3,65.9,65,65.8,63,65.1,64.9,65.2,66,65.4,64.4,66.5,62.8,65.8,64.4,65.6,66.2,63.9,67.2,63,62.3,64.3,62.7,63.9,64.3,70.2,67.9,68.3,67.2,67.8,65.7,64.1,62.9,60.7,64.3,66.9,67.7,63.6,64.8,66.5,65.8,62,61.6,60.9,60.3,61.3,62.4,63.4,66,62.4,66,66.8,67,65.7,66.3,67.5,69.2,67.6,70.7,71.7,69.2,69.8,68.5,69.3,71.3,75,68.8,66.9,67.9,63.8,66,71.9,73.2,70.9,71.5,70.5,70.1,162.7,121.5,68.1,67.4,67.2,68.1,69.4,73.4,75.8,76.3,74.4,70.8,70.6,69.6,69.3,68.7,69.1,67.9,68.1,67.4,66.5,65.5,64.1,65,65.8,66.6,65,66.1,65.7,67.4,66.7,66.6,66.9,68.1,67.2,69.9,74.3,79.1,78.1,75.4,71.4,73.2,73.5,74.3,71.3,70.8,69.9,71.5,72.2,69.1,66.5,69.1,69.5,70.3,70,68.4,68.6,68.2,68.5,68.5,68,69.6,71,71.9,68.5,70.6,70.7,70.3,69.1,69.3,69.3,70.8,72.9,68.4,70.8,64,66,71.1,69.6,67.7,66,67,66,65,66.3,65,65.1,65.7,65,63.6,64.8,64.1,65.9,65.2,66.1,64.5,65.5,66.8,65.3,67.2,66.8,65.8,67.7,69.2,69,69.4,70.2,71.7,70.6,70,68.7,67.7,65.6,64.1,63.8,63.3,63.3,63.4,64.5,62.4,64.4,66.6,65.8,66.6,65.6,66.3,66.5,67.5,65,59.5,58.4,58.4,59.6,58.2,61,63.7,61,58.5,59.1,61,59.4,58.7,60.4,64.4,68.5,66.4,70.7,70,69.1,66.8,66.9,68.4,67.8,63.3,69,68.1,68.6,68.4,69.2,69.4,68,68.5,67.8,68.6,69,69.4,68.2,67.4,65.6,66.5,65.4,66.4,64.1,65.6,67.1,65,65,65.5,65.3,64,65.6,63.7,65.2,66.3,66.4,66.3,65.6,66.8,66,66.3,66.3,65.1,63.4,64.9,65.7,73.7,72.9,68.7,69.7,73.7,71.3,70,68.2,65,64.7,67.2,67.7,64.4,65.1,63.7,65.9,65.5,66.9,64.4,66.8,66.3,65.2,60.7,61,62.7,64.9,65.8,66.5,65.9,65.1,64.1,64.4,64.7,64.8,63.3,63.7,64.7,64.7,65.5,66,66.2,65.7,65.2,64.5,64.4,64.4,65.3,65.4,64.6,64.9,64.9,65.1,65.4,65.8,64.7,65.9,66.1,65.8,64.9,65.5,66.1,66,66.1,64.6,65.8,64.7,64.9,63.1,63.4,62.6,63.8,64.4,64.1,65.1,62.5,58.3,54.4,56.5,60.8,63.8,61.7,60.9,65.1,65.6,64.2,63.8,63.5,61,60.6,62.1,65.2,64,61.3,60.3,58.5,57.2,59,64.6,63.1,63.1,63,61.5,62.5,62.3,61.6,58.4,60.4,60.4,86.4,64.6,57.2,58.7,59.3,59.8,59.7,61,58.9,58.4,59.9,57.6,58.6,59,59.3,62.6,59.8,59,58.9,58.9,56.8,61.7,61.8,56.9,56.4,56.2,57.5,58.1,58.4,58,57.4,59.5,59.2,60.7,59,61.8,61.7,62.4,61.9,61.6,65,66.1,62.7,65.9,64.1,63,62.9,62.4,62.1,58.4,62.9,64.2,62.4,64.2,65.7,58.9,60.9,60.5,60.9,62.2,62,60.9,62.4,60.5,133.1,67.8,60.4,60.2,61.4,58.6,63.4,65,62.4,62.6,64.9,67.4,62.6,66.7,63.5,60.9,61.7,58.2,63.6,64.3,62.7,64.6,65.4,63.7,61.7,62.2,59.6,60,59.5,60.1,58.3,58.3,60.1,60.5,58.6,59.7,59.7,60.1,61.1,61.6,62.1,62.1,62.4,64.7,65.5,62.9,62.2,60,63.6,64.1,63,63.5,65.2,57.9,57.9,59.7,62.2,62.4,59.4,59.2,65.1,62.4,64.3,64.3,63.8,67.8,67.2,69.8,71.6,72.4,70.7,66.2,64.6,65.9,95.3,68.2,66.5,66.1,64.3,64.2,63.4,63.8,67.5,70,70.5,65.5,65.7,66.3,63.5,64.9,62.5,66.4,59.1,54.4']]\n",
            "\n",
            "labels:  [[1]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zyu80slj__DA",
        "outputId": "b35bf228-af82-4276-c44c-d86c83804fe3"
      },
      "source": [
        "VOCAB_SIZE = 20000\n",
        "encoder = tf.keras.layers.TextVectorization(max_tokens=VOCAB_SIZE)\n",
        "encoder.adapt(train_dataset.map(lambda text, label: text))\n",
        "print(encoder)"
      ],
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<keras.layers.preprocessing.text_vectorization.TextVectorization object at 0x7efb99be2c10>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MjGYXv5gCcAs",
        "outputId": "2c671954-be95-452b-db51-4081a9b6272f"
      },
      "source": [
        "vocab = np.array(encoder.get_vocabulary())\n",
        "vocab[:20]"
      ],
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['', '[UNK]',\n",
              "       '98698798499499299910291041101910641049104210221014101810139989951002100210019959869879839699694794394394995595895496396797196196295595394495695895896696962955955959329594498110891105109104410191007100610171061108910811048995985101410210231006999100210061002995989981979982992100499798994590897101510210811087111311081104108710681053104410431048103610421021999989988982985987981976976974975972975989729797198984987987984989999997896796696396797196597998199699610051003100999499993987986974971968959962961962973979976959972975978967979898978977979979699649679759739729629731067105810410049996395194694895396597598598397897598498597398610286395194922921921929199139189289292893946961972961956954951962941935939539679629519399269189159199179189239169229229299229269292391792993493393928917918906908907906906913914921924919909912886885899149119118999028959029069249219269279279329299249269289392592916902901904904903896893899901891909018999049049078958979018990907949991101310059669389339189049189621031107110911086110978628668528458483784845841844842839839834833838383483836835841868628638528478318258238228278338318438478468438378288298278228238248168138067958078078088080379378791785792787797887847857927978778277678178678780379798805803801806805804803804817833826873871854838822826817816817818814808804805807799797805799714727839833836825823812805797796796792796794794805817831835832826828148078128098180579679378778778479479280780281180879580581380579780380802809803813802807794792781792792786787837867787757657778778277677978979180480580180380580881180981680280679479176781787591410361025106103810310221002987100297397978999619779749759469539569319179129049149199289649739449179129199139079069049089889189288989488589491890688587867883888885881882875867868878876969829729419229088789289188788588882887891888888',\n",
              "       '986967995979996981975961005978979769779689859799829989979861003992965981987969982987986985989984986972994995981994100599110049669769851003982987100597897896499896196996495596995696894495596497969100410919839480180284887908858948949038969228829329349559389419195793596994196794958954943982957959529489649499589679879549379489619569149269669559639419739659699749729679949629819659849819799679769896497947983976966968100198496998497968979841001036968955928957972698202293893797497610069519779919849779729569599649939699789529849949659896957965983976963964981983988969649559479549699719189589619895996897498695989956977954952968968967955959479539496795595395599697979979479659579569869799589749791019599649871009977974996991983100100102971002100110210281017992104110211032998101310121005102110099210081021023992102299110341022102210371013102510211031038100410171023100810411041101103101510121028102410141011001102298610197795589886681582180679278279279779978679478179279578377778778379479681889492881274745745765797647776378786778769792775788792818037927867917937938118158148538578248138158338088183826837838448584284484482885288487838832849854838828812828832825835844838844853838865941903849868871859878689048588848728684286835853842844854854848518578678618568448498578668418485886987786885284885687787386285787285686385858864868866872869876868867873885865862869823822811788786811785978598137617597857637984978979782793817802807814817822822827848558218288268258484383382983382282783282684584481382382784184483834839835835842853846844843849838846848846855842835846848368538478478648578583276374733713708715716701708697718697716706716715732736721717696715733725723727751714737227427247168675667675653673676786686726616886696766656856656867685703683664648638614615602591605598597597596596601598604602',\n",
              "       '977971972979819897698297797899198398297997897497998997497997897998198598297798999499198986996988993100982987989987100198699399899610049991009989959998399210091006103410291027101810211017101110089929941004102210211001001100398699499210181031101210081021100399699510089999859929879919829819899889971031102102510221011101310121004100100610031001100610091011100110111039102510310281023103910431029103102810271003100499898910051003101710119851004100410029981001100710021009102110061015100710089999981005998100610199910299929999498798798898998797798299199298898218431424994998100198299991984979977989869939889889779769889897398981978978964971976100310161002995984986977984968102410291028101510061011100110011008101910151016991987999961001998982996987983961949978988983101499198598976984987976989679829739619739789799729889859879789639710039879779789919869851002999996100310059939999879839998798397197198510259891009999998979979984989779789951002981983989986997100198899499810039819829939919979899999919961001101499897798999798897897899995994100210061012993100995989989100975982986999819829841003981101210081004101310010049961014987101698799199299399699299599110099210031001999998998995101410131002998100110091004101510191021101310171003100410121014102100210181012101910161009101410111023101210110031007101110321019100110181012102100810161043103810261024102710251001016101910131011022103102910431023102710310231041019104810511023102310291017101210091005101110110431031029102910491051105103510321032103910431024103810621038104510441059101110791054104103310291033103510411031035103210131022101310881232101810161021011101210221006101610311016102210251001991992100510051009100310131014100710071048996100510211017101110261025101110111011100110091014102410221016102399710081002100710171006101100810141008103100710079979999919959969961022101110251041015100399410189931044989100710041003101199310019931006101102910111001002101110111011012101410039979991002102410091011001100410011003103110619798598610097999610079919979859769639819899849871003983978984969982991101199310169729939791009',\n",
              "       '947969639639739549393492495995599102610129579599829689799389429039369493997898796410291039469959719739579797393894893990990905895927926907913905933903946934944935912901913905101499398796397393998993874861848868868859875865875863875885859858899918906929499797998410049919889939829639869789599539579639519479419319249329339369697894592995962934969958926945918933935941924911911923924939519559493933922939239089289592593792595791490891291949393997697796896297695694992991186486789391785585186884831851878853808038148468768488418428848889219629729679593793993293292490492590990288388888873898865898848648828689188584587488486987880882786383580880577578672671772573671971672172973674675767537447417517597374673972172373717716969570268468567268676676768738767758723721706738757327377371370970721702739748733732727741754752719733727702718747297197267167287473673751742727725737738715723734734738734725725731725715717737227397637887647647617537587597617587537467457327473574973872672171472729735724727377597637767597676876575975476377277977176976175275275976374578577781882381281684281578679875828822806807811806791788279377179577678477984684483813828318168278228068217958338188137957847797857777687677777627577577617777727747827737837817737767697787778764779787796858843837838282183482481380780281280780281780382581984581883683684783882883381784482581379181282981382892897898919911921945941905871932888892867845878878618728378498658449098768688819158939239029269128869048699078789590293392990789388687686785384281787184583284988384787486786388689791995894393290909931986967961974945921904914954942905949419019092297198966947902924954978989849839479278638888848688588789339629369681021101698996897998196196290793690591489687588787683288388283881482682',\n",
              "       '947859788746702672661658669678707427487847858558167467287472470869668368569270968268166867668694673701686886766686776857046746726966968366658656662655666678696711719742782762716701682666596586566486526566456496496546576526556636656776987026868668870869271969662668665671669696937285191892855861816777752757177270169971371718709698705725698769793773141714037977547387017196916987056936876876756786866846646576957027068567767568875276875767557527497472371371873373482689188789289291691190793586881879881391192189288485677780375757756745726732742731748757774757757387517272974678481886790288385183988889189888480672872669968865361259660767265264865648737775873935101810371041100110099258479774971469269733754717717737814758747713723153688275572469268673667715739738751788792744741728738719712702852891908912902897897893895891852825787397046666696816456527086967767767797988180885183885779834801818068037687767988128378979680275674274675575782380777087427437497657777737237397157157287197437277337274474376573477886788389687184881678182487189587181984894938728158128080799793807807778806777773786777617918388178278878773776752754741753819079269269138628838884982784811801815806828228218278178498888683883484787788288793929936909856845873884874862899119319391694796496196492197296496595192498310091012102210241017100899997696495893290789694292990896697296591898878558778658878598478258338128017737757627647437417227527617747577197167031317606812831768735708708716728731723737725713691711713724718729729739767776775796828836813776761766747547757577537587537568068898598257917798839429448718358078576875574178577782481581381198683174873180295893286881779275742709682664665674669681696677666696667568366566663629654662672704763759729716712681705711721747723714712714',\n",
              "       '939092393292793391690195694495689990191812591204924923916918989149090899189877867878678748886686886987881884885889884881889887891891894892898909019039089079191190289188988989288689893891892909059039099249319449393937933928936937974964942949906919915916925949392791391991908912915911902907898897897901905897902901901894892894894894896902902901908915914911916915914917929189279392893393894293894494993794894494193494793593392692893694493294936955949929933933935949393493193393493193492992691991591911911919923931937934929932935928918917918929941936931932931949379392993693493941945949429459699639549629539639499349469594795295195195396196596398978969883397328997496296795894994794692992393392493937899959969963964969599429118989394894793891790990691969429469289269219329449479319198988958728768658528583791807824822806814809793797801818079378783785787978678780791799807937817757817737878779787799803808797794797978018138158098118057927887847878785797897867978978176177378780181382683483683784384184884785986186586385985686486687869868728628488548585485585785858868678748638658648648786984682680880480982381483382982581681481483581382580481180980781807814829812833816819829838358358358228278238248248382983582787183882781279582484848283283683828128037917917967978038148168168248288098298298328328282784483783983482182984838218283987685883584884784833843839835827813818827841843834844846876883896861856858871861882834878878884888866871874883882871868881899018999149199219119169191590990191391907907908901897896905911916921908906916909887888914913874915914881885872898858949378748978968888848818858898978828798728848888488789892908979069039489989889590489890491292291491591791691991890789989690690190190591391909916909901899894892891',\n",
              "       '8998989079099019091590890490190790790691896879881898909049559799749429199219228978887685586776386486787287487488289891895887905895909189129279269179219469469639449419799961004984999728357647226936686656686736776736870470270872726736738735737373573373873874474673973875754764751745763798688448158228158181838428558578584984847854848854846854853843841854877893903836819807931723953808088058528468328298268298378484585285586863867873871863871899199391890689989789891394294939119048968999159169188998998978938999069079028979059088999090491791391590490882875864878658648728786786989189890390889490390691923936941934921928944928935948942947938939941927945952919913901901905928933913911901908948898898928888988871874868865893883889895911892902898894887898987786388878888818768718578618488691925108111011016969995964935947966936916927914919904914916913929941921898881886875867862845852844837831825823826803736775761726708696688708709715709719717725714727734759757753758773768769777876176577375677378276980778779802799786779778776786786774776787781794771777776759782778776777788775766777768782867882851832824778787617517517357327467397487597637537676575377876776475874974275761752764757657557617727575763751737756762742753744756796803817823827818098017897817837737697637527567497587537537575376752754745746752744743752756744738735736737737749748742751732737277337197167127117127167172971671973772671971971872173879739746747457317473472974273973173721727737477788127877776744747739719757839807797777777798228358338298148768548228158048037978169719291990588886285837841842837834839832834846839843848862867893883877874874862862861851854845843857857857873891888787494695925929249179168989068988988998998949029059018928858798758828888758838888882866',\n",
              "       '89695496391479474372869167167567467165173480376274675478281819906829832809739724743746729707706886767168370271170971726727273727747517657979380582837859871884902912927945958965979999910011003103102310181046104410610671065106210611067106310219979769429098838638468257957817677667637674973373673772719727437537557437197187126966977016976816736756786786867266566968767365566659668678688684685684687684712694675788192314818738538789893796397294492391596799610489569489549489599779929991004100210071014101610281041103510061005984984969569489439229259219493891790887285984583781679877875674475878575273573372473172671972271969469269366665465665365365265265865664764364164164965265565465166669168166566666616576656536546546396316326236386360860159460960759659358759263468566263564162661861760960561263264867471475679681483786690692794955976100710011019102810291015101399999101110661177168725132231108107510329519288285581798789784761755752768773776758757725713724735708686677666656436326346296316336246286236236196176286216466461361598638653701698666476396871338775741699674671671662667664649643651646655674529789954924960271874374776796835852856873889904916924937953956968967977984985979100599599298810071006101110189849559429249069049038998998969089179139118948668318228181278475174721728711696697692682689693681676666659651644646426462463162562863463263626616166276226165995945865845825795655685775745775565595495425565857557259578569563554551545551555465375235225175155848731064110211111146117111811198121311981191124143814531351115497689877776761748732727723705693678687072270570571569969968468568967967467766365564642634632642633629636296246216236216166076096045995985945945976035825795757647657643635626601588584578573561555558551545555571568631774882925985104811181174120611821171115211461145114511581158115811471116110110991102108810951089',\n",
              "       '88591191938938958953939954953948932953946975965973953951951967956958967946941944962942972975962959259189039088978848658658719179529696195294494995896995392590889188687586888876886888718668758718798798798878948979039028998989388789998499110371028103810181036981051023967102310410191033987997101110219779894785110031049102410111019102999939879579739789699258287817187838328878918848959119429159539569749589829689839559669219369529389859749279539589479588938929289189129279499298939218969078898858999179369169299049669649529090594791491695593592931922884881894867861888618788388798788791290915928949499469599249259219459499399797597399396697899994693592194196997391919921939918921919949129119149158929089487886386888887896908978869059019129189449592993791791292188893993391289491791693192792692491192393393693995392594497997896195792495796895796493195194595394794396794892691939938915915939539459499889699359159219198991989592191190192687879889895914941949939439289339259179159048828838658628668979018878748778888988687187685828831841827851838872875856873852851862889881857909913932932919179199188929519439519399299179169249299348989992491193894796939957966987100410161057105110371027104710311029996104999102710379999839969789679739719739796298198799893295896910131012101798899910141019939819789649691014105510561039108112110731072103410431021023100210331042103210311004103510261014992999101610231013103310139981012101910341042105410299951008987100797995896897294597696497959973978985988969399099349699679729969999981004963952906905946938948952962969958969649829981019849779549339849889999971004997964935943946956979029149239249495794596795993694299497995495696961961952926901962959966959249879649729759799789639449229188858738678738698888858828878888848910410611078107210289971039949819449158958818798788858785986386935972973978',\n",
              "       '885901888894927931953945945917925926922917923919292291194191993912913894895911901919039079090990990792592192911909909914914921913916905919190890590290489893914905904901893891888883881878768748738838718768688748768718788658788538718658648568678588528748588638584884986286485686285585985585868558599059328948748729239318998828838858878868849089686786888987886887588389290288689918919289239359399293396294595596797494998298597398295953986993948917933955944944959929936921925929199099190390907897907898911902891897906897898908938988978948938918858868828828818898878889908868788818728718738584786185685185585186386287486886985985786484786787487386688872866872869893896903922947953947939339169179119190590592902907898896895896907917891889896916909198938969068991993389488587388489789589590493925961935919924907908881868873876887883881871861871872868867877863866878768938929919449259229359249199069099099169291391911897895888838938798888188289488287387488387387287869876855868648718748788758668658718688638688978738728768788688628628718668578678798558538578578558678688878948890590924924894875872868686685886186881864857851838826846817836845838318268268218198288198228168058058098168118128068048088088078148128138067987987887997968038080479178580879780807997938037857887957887978578778878778879979179801792797848027988058067997877947918137997948127998028218538728789583484684183682382482782585285887887947878548388890491693690788873861865885893878878758638658688648718698668748628786485889881878688678728668668779078958918898948768648638448581595852851898628658518438738828548588618628678658728948848628588638558528468378888748539189299538988186986688789895901949269379399239295291592925928951961952943938908897936925942947952972969968954977',\n",
              "       '87885885685685785185584685385685868855868868871888668658698788886894881881874866867866855844848518468348348338378248158248238278268284282682584684785684885485786886887866865848428228278198348278278078218282382795808811828148118088158038628658578448288338538688528528628689185686786856859846835837834888936929194394894938925925929129259028988858798919028898798868848878858668498638668758858828886286587988288889689688888789489389889690291190289291192393596395495394794695696496295995494994494593994693493793393593392993923918923918919923929939279219169279289189079079059148918768748858887485486886286856862847845885898788668618739249489829869911014939939179291017967977986996968968974963965955955954949589529519669719789659599499379489369499379494194694492392892293394193192892192992691991394896979975967955946935959429581031101989989897396396696497396896695594895795296969759899799579689839669797295595396696796971979619589529649669749599759829949839795996696596996696964963979796797996797595696596973964979669779729849789695896896295396973991994995986986992998996987100299298599989819999499599598198799699310129969969819839899879911009989100310031007100997997997996100992996100499297698799110029961003996100498499699298798498597797978985985984985997100310049979849749729829999198797997596597984991999829759798296697197297996998597998310031024104611271036102990392153591019101410251044102110310321028103310111015101310261015100610111041107107710341028104911531122105810297995395193911199193991288886387485483884382282280379581180780883383180479979579177578877979880777777771784778769758781788789785762762759775778755752752756782767777575575273273672972972973272973721721721717237087067026956826866856946936856826867867467167467466966167676626676766766667467267466668167666266766467387912111104',\n",
              "       '87884481797978168288284482807838668197947657717687647397237477617737687758079379683582984589488181478976673974873973676476572734755765753784762745736729788856903888488468481180837808821791828827818837978068218318088383482183279676576175879763754705699752801835808837867687637237277270972773273473753758757753709695702693677197167156676636537017287373727027157557648385883279768731672663649646656739767817687637637497397177365867264864564168369965663761261557255153353253445754960160962567469168766264463866365664689674665642658643662664673633606622659722693704685648661695693717056736566757046864621583581631613625614596622644635624605638619634661653644652664625594608605965835896055876096475995775485757368859260859463862363260258587583582604622635646645691675694668684655604568544552548553557567562552575586061764164862560960586226186797247087317057087241328159821452103111569668968268973572774371471770267669470470271715693727487497317497187287147347127277247327197172970666965164464563263963162864164765364164665673654665687675676826926696566626836946716446586646846877056966696686716686846866816796676756817237086997347387247487227017277216956970570774373775573735723698693696684689677654667687712728714726719849275572471570570371675713706757737148026987317373469968870565364664264664763862563636631611619612625645667066977127177357417347476745727698727447797977957817737897537548167977657557667858088037597627877467370167565169772372875274752728787778753747763737597387146996746956687016776787147417337347537487447437397477187247096870772570972577278791785758722705713712718738767752754766782802806803766777801765737437487296856316396696726687057487537287517898037627056736576926746869166266965971692692735759732729698686762775789774712682',\n",
              "       '87388188589687482487183984803845886917927892924916937893877939901898958918668238228079580588586985185385582963996998994964978968923926845816792834869901868822835848381680279985884383181822811805848348338468628438438138280377677879808048081581817978379382284781279771808218584884486182377981280482681583781886783381484981786687186685854909922892891904887882892878889873823846858368238348158048458578378174378879377772774277826828866847861867851841836834845862878827828388418488358582582685892894907907919898848817782766786778804774755753727736735749747237147437397587527247357473674276879277675274574975878377576776176777777578378678679979579779792773768784784783781797937957477597427497627427727617517497575676374974577276176777755767768784781766753766787763764754755791773757467467527718248127857697657747697697597517447497427587697687757687697537674474572717197337447367327377377337437577637957697397517473172673275275374775374374477179764733718709699714716712717097387675975173875737742732719699699717709727717397367317427497427397487557947767337327187327097087247375374975574778276876876578678765833813763744747347637617668058178458448447937657617848068288198178118118128278347548368318078568578588377579586984283986881788775803787717637667876753757537587527527427457487417367427417377317397327247167170875674872370570569868168267167666766867867567667767567968568869569671671373579742729721691693701701724714713701692689706728719704702707197387557577637497477297257171670669573873472974474975176476778275280281181382784789823828824822834859827806837967637775174974774675475474575976749757756752765771755745753749745757587657667747737867957787737757777738178098018087897977817867878177998067957737857927927937857777978681818803794808842',\n",
              "       '8588348188218048048068181481480826884873852838865863857863879868882848838805784777937757056957069668567769368169772777948228278418568586488867848842827807793807977847797787767887877877877867767958087878277778377477478679795793795808080981481981482482882482282783831101098398468428428398478558585582483784583383782783483283983883784385584885286787110791581493117786287876898948868859039339329299289149089388889288588287786585784583581980979779178378778771775834778117847867978178028037978018178118398168138438558684379279798812843896887873879863874815837862861818802776754731728727257066666566662661666646636636776868268679679701714715737737437537657587637647657797775975674974874974175776175273873874476747427827897947876976577576876745742744762823829828747157879277976376577576375877784792792791816821789758741758087948048678447577898438779018998818648468278228178081182683481680579481381382383384838847869882871862875904911895891882895894908888758949191991692893791925932952951914918924922917925931939933938961948911934963931962967961906868893935926904895899089259089198868948999393889790915908888786988188288887585384182380880679379480488486489186386587182979777878276976797791788733795857924888867866884881876872873882892892909039179049169149199229289189139149078828888868877747988388728738685184184485852846858498448448498498528538538538518628687187878586986488288489288488388987885782779677174974273771368666667456561159629666776776836786626476336316476596656656696746746746766767568169270372373674474875975976977478788807824839838438388478398147957627247016897768371272372873975174774575274875275475175755748759754758759769789767327187257357657576469737868428878968718438147877697587674775574773374274773170371972705695684677',\n",
              "       '8585686986842846864863867848858844868921888448338468628568887483585827783849845856852838478338948477897857717698468778258568888868658658989397710179649569239286288789689287488387588493883877876878848877876897916893872881873873872878728788518448584784686284866844828868398277978188184838839848027967967948081277675976976878280795791792784793787786803785791754773789794791803784789797798067987677748218138047778281578879375176578975875676473874675275175974374575377372575377879475372876477769772747757741759756757517197297197157427337158178276279738147927437387362561962866364162761660963365273980767774731708737146295670870172771669369471173872670267669973673169368769970691683711704694699704725777257372871671271669669671470470370271724737752738734738738729732806783772749715762785776744754751757677677677977481786881278777677780278777867837897978177275181885385982477977278776478278775277776877879978878579675578479176577879278477277977577676177376677577377977578763785777796764785784787737567776795814797776775744755724747751768747457417437527437478678377578275976680982877776678782794778777778772763747765766777627728085847851871909871848845817785787765737733707715727227097186811189717287196856756966886946816876866857057116916866765776777873577180778479973472666866465665664866468267469692698702686677669716876656526536526476262163866263464561863166762763169276876374976676471872569369767266767466964466767567866364764364964365766667168268468270169566765566868868367965969470169669968669167267468268267667266366667466865865168668566666666367765366367669770271368767269277977176771770569368971673370171770871870869672570472574672972774978877177178376175276176675473572475774977177274573169467272475176277874574276375972748756739724756738741719707',\n",
              "       '8557616336226246296236276256346356346346356396336446536616556526464865665264967709766779815777197086876726646536556476376286336363627635636644645645659658658666516496496476446466386456436456456396456446464665658647636638642631636638638643638649644639643641638637628636649633634635638631633625631631634646356463462863563613621616196356286336456567367667167663666666516496466536626556496536576436366546564264865164965965564764864764363964764266471671371702691688696856766716646516546516426536416476536576536556646516516496526636716686656616516486516526576656626686546726676626576656526516586546526526616586586526496496546446636647067387317247177137116956866786696686786696686746726637446836586716516516496565666967268466667167866766765465766265665264565564764965665865865965666165665566364865648658656661676716656586566586546426446436346416276286286436526536496486466376536565647646649656464364964970372716956936866786786646665464963964264264666657651647639644641639638661649652656526627526366966776656646556656586616526566666726867267568468670168968870688684689697695694693672673683682681707447473171771871972971692689691687675679676677669676969769969368869696926876946986956876816846969268769171775731714756706666657655673684737748743748755772788789783719701682676664683685702761758896854795627636625716707699702709708709719727738744743748697679676678678688686682693707705706713705717721719718724715714721725731719722734729729737257257297487377257375743741742742757745768784775757761764756754753755747746747744739739113667774373573273175175474974173975375476766749736729755758748745766807877737697747717727567676576876875975574775175775475774574775474674875174474575676275475776777762752749737738734734738723741737724729737744744744729723727725722725727',\n",
              "       '84877772271770468566866169473776183885176672270471171674176678779577476886186977273371271371776976776278189387978877376274707719734761791836815788749732726737744737747737735759772782772778785854909018338067777457136886967157272724737729747437567437497588488728681878775973270697708713721711711727197177327347117247127237267171971671673271879481280577575572172171270671770869701681707705697716996997027057117197347477387317187128138037774724705687678683674663673664673693692712717714706693692696917026986926866756816816796876867968169482882476776273570668365964464627631617618629622633646386416366386486656796766696756646566666696646546466496456466566446536516446526566786876766746736576646616626546436446416436576587387867277167016846969569170168868668567667666965564963864864765165165365264964365267167875471569367765965565764564764163764163564464464364863262862963864664964765264765365565566766765648648645645636641645638636637655671667658658647654643649653646649646647654653657658648649641639659666663663652664662666664763863562763364464564864764623623646667837772771170768466966641636623621631617626628625635646356386667666866967515941745205205813428465966666596666656666716987016947071170269694687682675679685686756656576636576476526446336216126326376396436556576626586656626666464964164764164264264964363764464971780778974672871571973675876476276275574775752754763783798798794794799795786793783784794784778763766761766767767769762765864877868823781789795816828158097997847757737737837979791781787747757867857787767677747627417357277257238068558377717557216877077057097127057137096996886826917076946727269872871369669468668367684692695756725713709694683686692697697689689685717848839745681686756581036871713058430776261761460559657758573574591584582593601623634642',\n",
              "       '843835834831835848852858686788189898868858858798928948938848828868778688638688678788658288468586186586284784846907963879719881031991015946868845835838228118047918078081816803785792793792793778765763761763762757772768772781291748765784784788797967957917947716978158939179038998898688818968718878858858968959049149229349419489569749981011017102810391047104910611064106310691066106310621061053104610421037102910261019100710099498997997897998298983983984981003100199710021005101110098397997699510071007101910261031103103110381042103910431048104910510521057105810610641065106910731068107510751078108410881104111211131112111111211121111111099108210621051103210161008100999101310231019102510291031033103710421044104610431051066107910751085108610951109113111181109112211211115111411211191129113112511111108110711161112109911051109110110911089113211111011105110711051103109310871084108211041095108510851079107710610921075107310710641047104110431058106104310481041102610191021023102101410211026103110261056108110761063105103310310281017100799799599299989992983977981989839879839849889859789699629639649659589529539594193895961956955959619619619659649729719749998899199698297698399999799199498797194596291786592697295591990589861854859868558578448278280679679677777763757758761758752741741743735737257217147177137067057047197237387474975766777757897988018018268281281481280781881581482818818821831832835844852858861867868862863878786787187287988289590186283288390896893893892892898868818948968958989897887875878698618548518548598568548558618685585384684485385385585786386786185585886286687287867886886879877868864843851854848863949589589489449499393293927919215843875863858861859838687796738778831883889805797793787769748737137067317247272273173273273372172724709712737227277327237367297197097137227427547487387257217287587687627677487838128018238448578769029129269439679589539519559549559519469449449493694293'],\n",
              "      dtype='<U2492')"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fIlnelzMCcC3",
        "outputId": "8b8d44cd-fce0-460c-a914-314eb46c677b"
      },
      "source": [
        "encoded_example = encoder(example)[:10].numpy()\n",
        "print(encoded_example)"
      ],
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[51]\n",
            " [ 6]\n",
            " [42]\n",
            " [46]\n",
            " [53]\n",
            " [13]\n",
            " [48]\n",
            " [57]\n",
            " [ 5]\n",
            " [32]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HvHdHBsBCcFg",
        "outputId": "54753ca9-e8d4-4c68-998b-1ba98e8e3df5"
      },
      "source": [
        "for n in range(1):\n",
        "    print(\"Original: \", example[n].numpy())\n",
        "    print(\"Round-trip: \", \" \".join(vocab[encoded_example[n]]))\n",
        "    print()"
      ],
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Original:  [b'61.7,61.3,59.8,61.6,63.8,60.4,63.6,62.1,62.9,63.2,63.5,59.6,56.2,56.8,58.1,60.5,57.3,58.4,56.9,60.4,59.6,61.5,60.6,62.2,63.1,63.4,65.3,63.4,65.1,66,65,64.8,65,64.6,64.8,65.1,64.3,65.2,66.3,63.4,64.7,64.7,64.7,65.4,65,73.8,74.7,74.8,69.1,68.3,66.9,64.9,64.9,64.1,65.7,66.3,63.5,66.1,64,65.4,64.9,65.2,67.3,65.9,65,65.8,63,65.1,64.9,65.2,66,65.4,64.4,66.5,62.8,65.8,64.4,65.6,66.2,63.9,67.2,63,62.3,64.3,62.7,63.9,64.3,70.2,67.9,68.3,67.2,67.8,65.7,64.1,62.9,60.7,64.3,66.9,67.7,63.6,64.8,66.5,65.8,62,61.6,60.9,60.3,61.3,62.4,63.4,66,62.4,66,66.8,67,65.7,66.3,67.5,69.2,67.6,70.7,71.7,69.2,69.8,68.5,69.3,71.3,75,68.8,66.9,67.9,63.8,66,71.9,73.2,70.9,71.5,70.5,70.1,162.7,121.5,68.1,67.4,67.2,68.1,69.4,73.4,75.8,76.3,74.4,70.8,70.6,69.6,69.3,68.7,69.1,67.9,68.1,67.4,66.5,65.5,64.1,65,65.8,66.6,65,66.1,65.7,67.4,66.7,66.6,66.9,68.1,67.2,69.9,74.3,79.1,78.1,75.4,71.4,73.2,73.5,74.3,71.3,70.8,69.9,71.5,72.2,69.1,66.5,69.1,69.5,70.3,70,68.4,68.6,68.2,68.5,68.5,68,69.6,71,71.9,68.5,70.6,70.7,70.3,69.1,69.3,69.3,70.8,72.9,68.4,70.8,64,66,71.1,69.6,67.7,66,67,66,65,66.3,65,65.1,65.7,65,63.6,64.8,64.1,65.9,65.2,66.1,64.5,65.5,66.8,65.3,67.2,66.8,65.8,67.7,69.2,69,69.4,70.2,71.7,70.6,70,68.7,67.7,65.6,64.1,63.8,63.3,63.3,63.4,64.5,62.4,64.4,66.6,65.8,66.6,65.6,66.3,66.5,67.5,65,59.5,58.4,58.4,59.6,58.2,61,63.7,61,58.5,59.1,61,59.4,58.7,60.4,64.4,68.5,66.4,70.7,70,69.1,66.8,66.9,68.4,67.8,63.3,69,68.1,68.6,68.4,69.2,69.4,68,68.5,67.8,68.6,69,69.4,68.2,67.4,65.6,66.5,65.4,66.4,64.1,65.6,67.1,65,65,65.5,65.3,64,65.6,63.7,65.2,66.3,66.4,66.3,65.6,66.8,66,66.3,66.3,65.1,63.4,64.9,65.7,73.7,72.9,68.7,69.7,73.7,71.3,70,68.2,65,64.7,67.2,67.7,64.4,65.1,63.7,65.9,65.5,66.9,64.4,66.8,66.3,65.2,60.7,61,62.7,64.9,65.8,66.5,65.9,65.1,64.1,64.4,64.7,64.8,63.3,63.7,64.7,64.7,65.5,66,66.2,65.7,65.2,64.5,64.4,64.4,65.3,65.4,64.6,64.9,64.9,65.1,65.4,65.8,64.7,65.9,66.1,65.8,64.9,65.5,66.1,66,66.1,64.6,65.8,64.7,64.9,63.1,63.4,62.6,63.8,64.4,64.1,65.1,62.5,58.3,54.4,56.5,60.8,63.8,61.7,60.9,65.1,65.6,64.2,63.8,63.5,61,60.6,62.1,65.2,64,61.3,60.3,58.5,57.2,59,64.6,63.1,63.1,63,61.5,62.5,62.3,61.6,58.4,60.4,60.4,86.4,64.6,57.2,58.7,59.3,59.8,59.7,61,58.9,58.4,59.9,57.6,58.6,59,59.3,62.6,59.8,59,58.9,58.9,56.8,61.7,61.8,56.9,56.4,56.2,57.5,58.1,58.4,58,57.4,59.5,59.2,60.7,59,61.8,61.7,62.4,61.9,61.6,65,66.1,62.7,65.9,64.1,63,62.9,62.4,62.1,58.4,62.9,64.2,62.4,64.2,65.7,58.9,60.9,60.5,60.9,62.2,62,60.9,62.4,60.5,133.1,67.8,60.4,60.2,61.4,58.6,63.4,65,62.4,62.6,64.9,67.4,62.6,66.7,63.5,60.9,61.7,58.2,63.6,64.3,62.7,64.6,65.4,63.7,61.7,62.2,59.6,60,59.5,60.1,58.3,58.3,60.1,60.5,58.6,59.7,59.7,60.1,61.1,61.6,62.1,62.1,62.4,64.7,65.5,62.9,62.2,60,63.6,64.1,63,63.5,65.2,57.9,57.9,59.7,62.2,62.4,59.4,59.2,65.1,62.4,64.3,64.3,63.8,67.8,67.2,69.8,71.6,72.4,70.7,66.2,64.6,65.9,95.3,68.2,66.5,66.1,64.3,64.2,63.4,63.8,67.5,70,70.5,65.5,65.7,66.3,63.5,64.9,62.5,66.4,59.1,54.4']\n",
            "Round-trip:  61761359861663860463662162963263559656256858160557358456960459661560662263163465363465166656486564664865164365266363464764764765465738747748691683669649649641657663635661646546496526736596565863651649652666546446656286586446566626396726362364362763964370267968367267865764162960764366967763664866565862616609603613624634666246666867657663675692676707717692698685693713756886696796386671973270971570570116271215681674672681694734758763744708706696693687691679681674665655641656586666566165767466766666968167269974379178175471473273574371370869971572269166569169570370684686682685685686967171968570670770369169369370872968470864667116966776667666566365651657656366486416596526616456556686536726686586776926969470271770670687677656641638633633634645624644666658666656663665675655955845845965826163761585591615945876046446856647077069166866968467863369681686684692694686856786866969468267465666565466464165667165656556536465663765266366466365666866663663651634649657737729687697737713706826564767267764465163765965566964466866365260761627649658665659651641644647648633637647647655666626576526456446446536546466496496516546586476596616586496556616666164665864764963163462663864464165162558354456560863861760965165664263863561606621652646136035855725964663163163615625623616584604604864646572587593598597615895845995765865959362659859589589568617618569564562575581584585745955926075961861762461961665661627659641636296246215846296426246426575896096056096226260962460513316786046026145866346562462664967462666763560961758263664362764665463761762259660595601583583601605586597597601611616621621624647655629622606366416363565257957959762262459459265162464364363867867269871672470766264665995368266566164364263463867570705655657663635649625664591544\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "VxkFMjgaDFoS",
        "outputId": "dcb1e131-8622-4df5-8457-d46e9a4ac8fe"
      },
      "source": [
        "model = tf.keras.Sequential([\n",
        "    encoder,\n",
        "    tf.keras.layers.Embedding(\n",
        "        input_dim=len(encoder.get_vocabulary()),\n",
        "        output_dim=64,\n",
        "        # Use masking to handle the variable sequence lengths\n",
        "        mask_zero=True),\n",
        "    tf.keras.layers.Bidirectional(tf.keras.layers.GRU(64)),\n",
        "    tf.keras.layers.Dense(64, activation='tanh'),\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "model.compile(loss=tf.keras.losses.BinaryCrossentropy(from_logits=True),\n",
        "              optimizer=tf.keras.optimizers.Adam(1e-4),\n",
        "              metrics=['accuracy'])\n",
        "\n",
        "\n",
        "## train\n",
        "history = model.fit(train_dataset, epochs=20,\n",
        "                    validation_data=test_dataset,\n",
        "                    validation_steps=20)\n",
        "\n",
        "\n",
        "##evaluation\n",
        "test_loss, test_acc = model.evaluate(test_dataset)\n",
        "\n",
        "print('Test Loss:', test_loss)\n",
        "print('Test Accuracy:', test_acc)\n",
        "\n",
        "sample_text = (80.36723316,80.35004512,80.30040571,81.20053963,80.65025388,78.73302681,78.28282557,78.08283559,77.89945177,78.8332456,77.71602319,77.49969563,77.94967307,78.39929242,79.93372758,79.05015505,80.86716333,80.78381926,80.8172106,82.68367924,81.9335378,81.98331149,81.75033302,84.38354926,84.50028468,83.53345759,81.25053713,79.25014502,78.68302932,79.81712645,79.9001572,79.38330755,80.33343897,81.28357039,80.93349841,81.18375444,79.91680811,79.51647008,78.31608263,78.76623911,77.43291294,78.23323092,78.44982704,77.31622228,78.19961577,78.149484,78.63334515,79.38330755,78.61647044,78.41639094,77.73307694,77.38304973,76.28314964,77.31666989,80.29982382,79.56682566,79.31652487,79.31652487,78.98355141,79.90006768,79.29991871,78.08301464,78.56633866,78.10002363,77.38291545,75.34980341,73.5664998,73.13312851,74.3666835,74.29985605,76.9831593,75.93312242,76.34997708,77.61638629,77.56625451,76.61625738,79.50031153,77.43309198,79.01662943,77.39961112,76.25025066,76.40010886,75.36649909,74.04977906,74.41659147,76.34966376,78.34987682,76.26649872,78.18305438,77.06641386,76.98302502,77.66651806,77.01655065,76.9497232,78.7998095,79.19987897,78.93333011,78.51634117,80.03349877,80.23335446,82.28334121,81.13366743,79.68306871,78.61660472,79.26661689,78.86663695,80.16675082,80.8506467,80.56673076,81.15022882,81.9335378,79.74989616,79.86667633,81.6001615,81.66725751,81.28370467,81.16683497,83.93375086,89.31665019,92.29971461,92.83330469,93.7327672,89.80001898,89.98349232,90.26669209,89.21674473,86.36670856,86.55004763,85.6167014,86.70030867,86.38349376,87.3833541,87.48339385,88.15001218,87.33362517,88.18313495,90.09995918,86.4835335,85.40023956,85.2169005,85.44996849,86.31680059,86.06681312,85.45014753,86.30010492,85.66705698,93.58335661,95.59990726,87.93359509,85.13378022,92.3164998,91.01669925,92.1161965,90.31660006,87.84993769,87.08345866,85.56674867,83.36699324,85.51697498,86.63321266,86.15024672,84.81678627,85.00021485,84.85013285,87.73356036,87.2832696,88.91698357,88.11666559,87.76663838,89.5336044,93.28323737,91.61657965,91.16646793,90.93317613,91.41658968,91.69983421,91.91620653,90.03331077,95.11658323,97.18357898,96.98358901,97.15027716,98.56703693,99.31704409,93.03316038,97.10041395,97.4001751,95.04980055,96.48347979,92.81669854,95.28331614,93.76642711,92.18311347,91.53319082,92.06646757,92.7997343,91.43315107,91.29994378,92.33310595,93.33314534,98.81680059,95.63334336,95.83328857,94.96618791,95.06622765,94.23341354,93.29957495,91.21633114,89.18362195,93.81633508,94.9831969,95.98346009,96.73351202,92.33315071,91.38310882,93.43318509,93.76638235,95.50004655,96.3834848,101.6003226,101.9670455,102.0669062,99.46708133,98.28370288,99.1004032,97.28343968,96.44999893,95.48348516,96.01676192,94.74977083,93.58308805,92.84991084,90.46677159,92.01660436,90.94969276,89.43343037,88.03336628,90.10000394,90.79974504,88.70007412,89.75002148,91.31650517,93.56643713,91.44984674,92.68335697,90.53337523,90.33311669,90.86661725,86.83351596,86.66669352,88.03350056,91.54984173,90.66662728,90.89987431,91.16642317,91.11655996,90.41623697,88.01693917,87.81659111,89.29995452,91.7498317,89.2000043,87.40018406,88.75016114,89.03327139,87.48339385,88.50008415,89.49981022,88.28326422,87.83351059,88.54981308,89.63310702,90.38333799,88.54999212,88.7834182,90.71653525,89.78354711,90.69979482,89.41655566,89.38343288,88.38334873,89.73328105,92.78330719,92.2330662,92.19998818,89.60002901,89.80015326,90.3665528,91.5333251,91.59979446,89.76662764,90.19995417,90.59988935,88.53347549,88.20009919,88.31665557,88.43330146,87.68347334,89.73310201,89.20004906,93.39974898,92.69978408,92.18297919,91.46645289,89.166792,88.11671035,88.50003939,88.53320693,92.61652952,95.88328607,94.56665557,88.40128623,92.56657679,96.91685108,94.13283667,94.13319475,92.3831482,93.16659147,92.81647473,91.61649013,91.31659469,91.1165152,90.83344971,91.43333011,91.38301929,91.13325563,90.11656533,89.66676693,92.03298671,93.38327711,90.81661976,90.04973788,91.34985175,89.93327103,91.46649765,91.74942886,90.64993161,91.8664776,92.19958534,89.54994199,92.16655208,95.19965875,88.40128623,95.18323164,101.3170333,99.16723065,97.51713433,96.25009847,94.68330146,96.28366886,99.20026391,95.7501683,94.26631252,93.40010707,94.01628029,93.53335912,94.283232,93.64951265,94.26640204,92.38301392,93.23332939,93.49978873,91.58309879,91.29971998,92.63331471,90.94973753,91.78317828,93.10003259,93.29979876,93.36649192,92.83308088,94.16667562,94.84994485,92.81665378,92.86647223,90.83327067,91.68331758,92.0499957,90.61658502,91.61653489,91.41663444,91.71652988,90.71666953,92.41653955,91.28333763,92.36663157,93.06673076,94.28318723,95.38353494,97.2503169,96.35000394,95.2499248,91.33337988,90.73349948,90.7833627,90.59997887,89.45003652,89.13344541,90.73323092,90.26655781,90.74988183,90.64988685,90.56676657,89.64971317,90.76630894,90.01657034,88.78328392,89.96693093,89.45003652,89.51650589,90.03326601,90.9998693,89.43320657,88.63338096,89.81653561,88.58351775,89.83336556,89.63364415,89.88309449,88.90010886,88.19987539,89.36682673,88.31683461,88.54999212,88.46660329,88.36669782,88.46673757,89.25018083,87.78355785,88.4832542,90.40007842,89.65016078,88.70007412,89.36660293,88.54985784,90.18312421,89.33330111,88.94997207,88.26683712,87.9500222,90.03348982,88.63329144,88.55008164,89.0499223,88.69980556,88.61673005,87.49995524,87.88332904,88.31701365,87.24996777,87.51682996,88.55008164,88.63329144,88.59998962,86.74999284,87.00033839,86.88328965,88.31665557,87.79998496,88.55021593,87.9500222,88.38343825,88.36701115,88.45008666,87.64990296,89.05010134,88.31674509,88.78314964,88.35000215,88.6999846,88.94979303,89.45039461,88.96698107,89.59989472,89.90010348,88.26670283,88.34995739,89.36664769,88.95001683,88.66668278,89.64971318,89.33325635,88.96639918,88.38357254,88.50012891,90.40003366,88.56682208,89.86680167,90.60011315,89.1165707,89.43347514,91.31632613,89.28321409,90.23347979,90.01679415,89.23335088,90.71644573,89.90010349,92.54997064,91.03335016,90.03331077,91.19985927,90.96661224,92.33310595,92.49970458,91.33320084,90.74992659,89.94992194,89.4167347,88.66686182,87.9168099,90.93331042,91.44993626,91.48328284,91.83322054,91.58336735,88.40128623,89.3000888,93.63326458,90.36646328,89.1167945,90.15004619,88.63356,88.2669714,88.48329896,88.21692914,88.11662083,89.24968847,88.63329144,87.61651162,88.35009167,88.43312242,87.98327926,87.50013428,87.40018406,86.60008988,87.86667813,90.08353207,89.29982024,89.06670749,88.83354997,87.95006696,88.03354532,89.01666524,87.8835976,87.65012676,88.48338848,89.0833584,89.05005658,88.18326924,89.84979267,88.28330898,88.6333362,88.03327676,88.8498428,89.70002399,91.28306907,91.56640312,90.20004369,88.89970601,89.08308984,89.13331113,89.08344792,90.44985211,89.09978551,89.60007377,87.49995524,88.70020841,91.45007054,90.44994163,89.6834626,90.16651806,92.53318544,92.03298671,90.78300461,91.00000358,91.16660221,91.01638593,90.46654778,90.61667455,90.7997898,90.50011817,91.08316861,91.6831833,90.90009812,90.56636373,90.89996383,91.4501153,91.61631109,91.91687794,92.69951551,92.44979661,92.4333695,92.34975686,92.91624592,93.21618612,91.79996348,92.04968238,92.86656175,93.59982848\n",
        "               )\n",
        "predictions = model.predict(np.array([sample_text]))\n",
        "print(['positive' if x >= 0 else 'negative' for x in predictions[0]][0])"
      ],
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n",
            "1/1 [==============================] - ETA: 0s - loss: 0.6923 - accuracy: 0.5085WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 20 batches). You may need to use the repeat() function when building your dataset.\n",
            "1/1 [==============================] - 11s 11s/step - loss: 0.6923 - accuracy: 0.5085 - val_loss: 0.6957 - val_accuracy: 0.6410\n",
            "Epoch 2/20\n",
            "1/1 [==============================] - 0s 31ms/step - loss: 0.6920 - accuracy: 0.5085\n",
            "Epoch 3/20\n",
            "1/1 [==============================] - 0s 31ms/step - loss: 0.6917 - accuracy: 0.5085\n",
            "Epoch 4/20\n",
            "1/1 [==============================] - 0s 30ms/step - loss: 0.6914 - accuracy: 0.5085\n",
            "Epoch 5/20\n",
            "1/1 [==============================] - 0s 30ms/step - loss: 0.6911 - accuracy: 0.5085\n",
            "Epoch 6/20\n",
            "1/1 [==============================] - 0s 40ms/step - loss: 0.6907 - accuracy: 0.5085\n",
            "Epoch 7/20\n",
            "1/1 [==============================] - 0s 33ms/step - loss: 0.6904 - accuracy: 0.5085\n",
            "Epoch 8/20\n",
            "1/1 [==============================] - 0s 28ms/step - loss: 0.6901 - accuracy: 0.5085\n",
            "Epoch 9/20\n",
            "1/1 [==============================] - 0s 29ms/step - loss: 0.6898 - accuracy: 0.5085\n",
            "Epoch 10/20\n",
            "1/1 [==============================] - 0s 25ms/step - loss: 0.6895 - accuracy: 0.5085\n",
            "Epoch 11/20\n",
            "1/1 [==============================] - 0s 29ms/step - loss: 0.6892 - accuracy: 0.5085\n",
            "Epoch 12/20\n",
            "1/1 [==============================] - 0s 29ms/step - loss: 0.6888 - accuracy: 0.5085\n",
            "Epoch 13/20\n",
            "1/1 [==============================] - 0s 29ms/step - loss: 0.6885 - accuracy: 0.5085\n",
            "Epoch 14/20\n",
            "1/1 [==============================] - 0s 35ms/step - loss: 0.6882 - accuracy: 0.5085\n",
            "Epoch 15/20\n",
            "1/1 [==============================] - 0s 32ms/step - loss: 0.6878 - accuracy: 0.5085\n",
            "Epoch 16/20\n",
            "1/1 [==============================] - 0s 35ms/step - loss: 0.6875 - accuracy: 0.5085\n",
            "Epoch 17/20\n",
            "1/1 [==============================] - 0s 33ms/step - loss: 0.6871 - accuracy: 0.5085\n",
            "Epoch 18/20\n",
            "1/1 [==============================] - 0s 32ms/step - loss: 0.6868 - accuracy: 0.5085\n",
            "Epoch 19/20\n",
            "1/1 [==============================] - 0s 30ms/step - loss: 0.6864 - accuracy: 0.5085\n",
            "Epoch 20/20\n",
            "1/1 [==============================] - 0s 42ms/step - loss: 0.6861 - accuracy: 0.5085\n",
            "1/1 [==============================] - 0s 20ms/step - loss: 0.6910 - accuracy: 0.6410\n",
            "Test Loss: 0.6910297870635986\n",
            "Test Accuracy: 0.6410256624221802\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-75-7c024e690557>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     30\u001b[0m sample_text = (80.36723316,80.35004512,80.30040571,81.20053963,80.65025388,78.73302681,78.28282557,78.08283559,77.89945177,78.8332456,77.71602319,77.49969563,77.94967307,78.39929242,79.93372758,79.05015505,80.86716333,80.78381926,80.8172106,82.68367924,81.9335378,81.98331149,81.75033302,84.38354926,84.50028468,83.53345759,81.25053713,79.25014502,78.68302932,79.81712645,79.9001572,79.38330755,80.33343897,81.28357039,80.93349841,81.18375444,79.91680811,79.51647008,78.31608263,78.76623911,77.43291294,78.23323092,78.44982704,77.31622228,78.19961577,78.149484,78.63334515,79.38330755,78.61647044,78.41639094,77.73307694,77.38304973,76.28314964,77.31666989,80.29982382,79.56682566,79.31652487,79.31652487,78.98355141,79.90006768,79.29991871,78.08301464,78.56633866,78.10002363,77.38291545,75.34980341,73.5664998,73.13312851,74.3666835,74.29985605,76.9831593,75.93312242,76.34997708,77.61638629,77.56625451,76.61625738,79.50031153,77.43309198,79.01662943,77.39961112,76.25025066,76.40010886,75.36649909,74.04977906,74.41659147,76.34966376,78.34987682,76.26649872,78.18305438,77.06641386,76.98302502,77.66651806,77.01655065,76.9497232,78.7998095,79.19987897,78.93333011,78.51634117,80.03349877,80.23335446,82.28334121,81.13366743,79.68306871,78.61660472,79.26661689,78.86663695,80.16675082,80.8506467,80.56673076,81.15022882,81.9335378,79.74989616,79.86667633,81.6001615,81.66725751,81.28370467,81.16683497,83.93375086,89.31665019,92.29971461,92.83330469,93.7327672,89.80001898,89...\n\u001b[1;32m     31\u001b[0m                )\n\u001b[0;32m---> 32\u001b[0;31m \u001b[0mpredictions\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0msample_text\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'positive'\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0;36m0\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;34m'negative'\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mpredictions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/func_graph.py\u001b[0m in \u001b[0;36mautograph_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m   1127\u001b[0m           \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint:disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1128\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"ag_error_metadata\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1129\u001b[0;31m               \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mag_error_metadata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1130\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1131\u001b[0m               \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: in user code:\n\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1621, in predict_function  *\n        return step_function(self, iterator)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1611, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1604, in run_step  **\n        outputs = model.predict_step(data)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1572, in predict_step\n        return self(x, training=False)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\", line 67, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n\n    ValueError: Exception encountered when calling layer \"text_vectorization_3\" (type TextVectorization).\n    \n    Can not squeeze dim[1], expected a dimension of 1, got 600 for '{{node sequential_15/text_vectorization_3/Squeeze}} = Squeeze[T=DT_STRING, squeeze_dims=[-1]](sequential_15/text_vectorization_3/StaticRegexReplace)' with input shapes: [?,600].\n    \n    Call arguments received:\n      • inputs=tf.Tensor(shape=(None, 600), dtype=string)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "05VV8mhtCcHE",
        "outputId": "9b083e4a-a407-4d40-9d9a-fb932733f5c8"
      },
      "source": [
        "import matplotlib.pyplot as plt  \n",
        "\n",
        "## define function\n",
        "def plot_graphs(history, metric): \n",
        "    plt.plot(history.history[metric])  \n",
        "    plt.plot(history.history[f'val_{metric}'], '')\n",
        "    plt.xlabel(\"Epochs\")\n",
        "    plt.ylabel(metric)\n",
        "    plt.legend([metric, f'val_{metric}']) #'val_'+metric\n",
        "    \n",
        "\n",
        "## plot\n",
        "plt.figure(figsize=(16, 8))\n",
        "plt.subplot(1, 2, 1)\n",
        "plot_graphs(history, 'accuracy')\n",
        "plt.ylim(None, 1)\n",
        "plt.subplot(1, 2, 2)\n",
        "plot_graphs(history, 'loss')\n",
        "plt.ylim(0, None)"
      ],
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.0, 0.6932838141918183)"
            ]
          },
          "metadata": {},
          "execution_count": 70
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3f5aSbmjCcIz"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IXjIMrXFCcKb"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}